{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","val","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","addItem","preventDefault","newItem","state","currentItem","setState","handleInput","Date","now","newList","filter","n","onSubmit","this","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAAe,I,iCC6BAA,EAxBC,SAACC,GAEb,IAAMC,EAAID,EAAME,MAAMC,KAAI,SAACC,GACpB,OACC,qBAAKC,UAAU,OAAf,SACI,8BAAG,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GACpEZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QACjC,+BACA,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAAQC,QAAS,WAC/DhB,EAAMiB,WAAWb,EAAKI,cALKJ,EAAKI,QAYxC,OACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,K,eCjBTmB,IAAQC,IAAIC,K,IAmFGC,E,kDAhFb,WAAYvB,GACX,IAAD,8BACE,cAAMA,IAURwB,QAAQ,SAACZ,GACPA,EAAEa,iBACF,IAAMC,EAAU,EAAKC,MAAMC,YAC3B,GAAmB,KAAhBF,EAAQhB,KAAW,CACpB,IAAMR,EAAK,sBAAO,EAAKyB,MAAMzB,OAAlB,CAAyBwB,IACtC,EAAKG,SAAS,CACZ3B,MAAOA,EACP0B,YAAY,CACVlB,KAAK,GACLF,IAAI,QApBV,EA0BAsB,YAAY,SAAClB,GACX,EAAKiB,SAAS,CACZD,YAAY,CACVlB,KAAME,EAAEE,OAAOL,MACfD,IAAKuB,KAAKC,UA9BhB,EAkCAf,WAAW,SAACT,GACV,IAAMyB,EAAQ,EAAKN,MAAMzB,MAAMgC,QAAO,SAAC9B,GACnC,GAAGA,EAAKI,KAAKA,EAEX,OAAOJ,KAGb,EAAKyB,SAAS,CAAC3B,MAAM+B,KAzCvB,EA4CApB,UAAU,SAACJ,EAAMD,GACf,IAAM2B,EAAE,EAAKR,MAAMzB,MAAMC,KAAI,SAACC,GAK5B,OAJGA,EAAKI,KAAKA,IAEXJ,EAAKM,KAAKD,GAELL,KAET,EAAKyB,SAAS,CAAC3B,MAAMiC,KAlDrB,EAAKR,MAAM,CACTzB,MAAM,GACN0B,YAAY,CACVlB,KAAK,GACLF,IAAI,KANV,E,0CAuDA,WAEE,OACE,sBAAKH,UAAU,MAAf,UACA,iCACE,uBAAME,GAAG,aAAa6B,SAAUC,KAAKb,QAArC,UACE,uBAAOlB,KAAK,OAAOgC,YAAY,aAC/B7B,MAAO4B,KAAKV,MAAMC,YAAYlB,KAC9BC,SAAU0B,KAAKP,cAEf,wBAAQxB,KAAK,SAAb,sBAKJ,cAAC,EAAD,CAAWJ,MAAOmC,KAAKV,MAAMzB,MAC7Be,WAAYoB,KAAKpB,WACjBJ,UAAWwB,KAAKxB,mB,GA1EJ0B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8618a779.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react' \nimport './ListItems.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move';\n\nconst ListItems=(props)=>{\n //   console.log(\"top\",items)\n    const val=props.items.map((item)=>{\n           return(\n            <div className=\"list\" key={item.key}>\n                <p><input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\n             props.setUpdate(e.target.value,item.key)}}/>\n                <span>\n                <FontAwesomeIcon className=\"faicons\" icon=\"trash\" onClick={() => {\n            props.deleteItem(item.key)}}/>\n                </span>\n                </p>\n            </div>\n           )\n    })\n    \n    return(\n        <FlipMove duration={300} easing=\"ease-in-out\">\n        {val}\n        </FlipMove>\n    )\n    \n}\n\nexport default ListItems","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faTrash)\n\nclass App extends React.Component{\n  constructor(props)\n  {\n    super(props)\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n\n    }\n  }\n  addItem=(e)=>{\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n  //  console.log(items)\n    }\n  }\n  handleInput=(e)=>{\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n  deleteItem=(key)=>{\n    const newList=this.state.items.filter((item)=>{\n        if(item.key!=key)\n        {\n          return item;\n        }\n    })\n    this.setState({items:newList})\n  }\n\n  setUpdate=(value,key)=>{\n    const n=this.state.items.map((item)=>{\n      if(item.key==key)\n      {\n        item.text=value\n      }\n      return item\n    })\n    this.setState({items:n})\n  }\n\n  render()\n  {\n    return(\n      <div className=\"App\">\n      <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"enter text\"\n          value={this.state.currentItem.text}\n          onChange={this.handleInput}\n          ></input>\n          <button type=\"submit\">Add</button>\n        </form>\n\n      </header>\n\n      <ListItems items={this.state.items}\n      deleteItem={this.deleteItem}\n      setUpdate={this.setUpdate}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}